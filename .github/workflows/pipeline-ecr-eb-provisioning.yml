# ------------------------------------------------------------
# pipeline-ecr-eb-provisioning.yml ‚Äî workflow GitHub Actions
# ------------------------------------------------------------

name: provisioning ecr-eb

on:
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  PROJECT_NAME: ${{ vars.PROJECT_NAME }}
  MODULE_NAME: ${{ vars.MODULE_NAME }}
  S3_BUCKET: ${{ vars.S3_BUCKET }}

jobs:
  provisioning:
    runs-on: ubuntu-latest
    env:
      TF_VAR_AWS_REGION: ${{ vars.AWS_REGION }}
      TF_VAR_PROJECT_NAME: ${{ vars.PROJECT_NAME }}
      TF_VAR_MODULE_NAME: ${{ vars.MODULE_NAME }}
      TF_VAR_S3_BUCKET: ${{ vars.S3_BUCKET }}
      TF_VAR_SOLUTION_STACK_NAME: ${{ vars.STACK_NAME }}
      TF_VAR_WORKING_DIR: ".environment"
      TF_VAR_PLAN_FILE: "planfile"
      TF_VAR_STATE_FILE: "state/terraform.tfstate"
    steps:
      - name: üîÑ Checkout do c√≥digo
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Instalar Terraform
        uses: hashicorp/setup-terraform@v3

      - name: ‚úÖ Verificar se bucket S3 existe
        run: |
          if ! aws s3api head-bucket --bucket "$TF_VAR_S3_BUCKET" 2>/dev/null; then
            echo "‚ùå O bucket '$TF_VAR_S3_BUCKET' n√£o existe. Crie-o manualmente no console da AWS ou com o comando AWS CLI:"
            echo "aws s3api create-bucket --bucket $TF_VAR_S3_BUCKET --region $TF_VAR_AWS_REGION"
            exit 1
          else
            echo "‚úÖ Bucket '$TF_VAR_S3_BUCKET' encontrado."
          fi

      - name: üß± Inicializar Terraform com backend S3
        run: |
          terraform -chdir=$TF_VAR_WORKING_DIR init \
            -backend-config="bucket=$TF_VAR_S3_BUCKET" \
            -backend-config="key=$TF_VAR_STATE_FILE" \
            -backend-config="region=$TF_VAR_AWS_REGION"

      - name: üìù Planejar infraestrutura
        run: |
          terraform -chdir=$TF_VAR_WORKING_DIR plan \
            -input=false -out=$TF_VAR_PLAN_FILE

      - name: üöÄ Aplicar infraestrutura
        run: |
          terraform -chdir=$TF_VAR_WORKING_DIR apply \
            -auto-approve $TF_VAR_PLAN_FILE
